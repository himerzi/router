In test3, when link 3.1 4.0 fails, bouncing is observed. Packetes sent from routers that reach router 4, via router 3,
will take a path that "bounces" back-and-forth between routers, until there is convergence on a new path to reach router4.
For example, consider the path taken when a packet is sent from 0 to 4 during an unconverged period:
Time :13 (0.1->2.0) :14 (2.0->0.1) B (0.2->1.0) (1.1->2.1) (2.0->0.1) (0.2->1.0) (1.1->2.1) X Time :22 (2.2->5.0) (5.2->6.2) (6.0->4.1)

At 13, 2 has advertised its routing table ahead of 0 advertising its table, so 0 has adopted router 2 as its first hop
on the path to reaching router 4. Unfortunately, 2's routing table is such that it's next hop for reaching 4, is 0.
This is bad, it will cause the packet to "bounce", as it is at :14. 0 should have never chosen 2 as its next hop toward 4.
2 should have never advertised to 0 a path to 4, whose next hop was itself 0. This is the bouncing problem.


Link 0.0 3.0 goes down at 35, a packet is sent from 1 to 3 at time 40. The packet reaches 3 correctly, as per the DV
algorithm, at time 43 (see below). No pathologies are exhibited. It appears the system reached a converged state between
the period when the link went down (35), and the packet was sent (40).

Time :43
Received packet src 1 dst 3 type 1 ttl 252 seq 3 path (1.1->2.1) (2.2->5.0) (5.1->3.3)


Finally, link 2.2 5.0 goes down at time :45. A packet is sent from router 0 to router 5 at :40. Seemingly the routing
table state has not yet converged, as bouncing is exhibited in the path taken (see below). This implies that there isn't
yet convergence. Eventually the packet is dropped before convergence is reached. It never reaches router 5.

 (0.2->1.0) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1)
 (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1)
 (2.1->1.1) (1.1->2.1) (2.1->1.1) (1.1->2.1) (2.1->1.1)



Test 4

A packet is sent at :10 from 7 to 2.  It takes the following route:
(7.1->6.3) (6.2->5.2) (5.0->2.2)

Link 2.2 5.0 goes down at :15.

When a packet is sent at :20, once more from router 7 to 2, it takes the following path:

(7.0->4.2) (4.0->3.1) (3.0->0.0) (0.1->2.0)

This is a non-bouncing, optimal path. There is no pathology. There is state convergence.


Later on, at :30, link 0.0 3.0 goes down. With link 0-3, and 2-5 down, the network is partitioned. There are two
partitions: {0,1,2} and {7,3,4,5,6}. This set of conditions may cause counting to infinity, particularly as SH/PR is not
enabled.

A packet is sent from 7 to 2 at :40. If the routing system has not reached a correct, stable state, there will be
problems routing the packet, as router 7 and router 2 are no longer on the same network.

This is the path taken by the packet suggests counting to infinity:
(7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2)
(4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0) (7.0->4.2) (4.2->7.0)

Indeed, at time :36, this is the routing table at router 0:
Router 0
d 0 i -1 m 0
d 1 i 2 m 1
d 2 i 1 m 1
d 3 i 2 m 12
d 4 i 2 m 13
d 5 i 2 m 13
d 6 i 2 m 13
d 7 i 2 m 14
Although the network has been partitioned, the router thinks it can still reach the other partition.
At time :40 all of the entries for routers in the other partition have gone up by 2*NumberOfTimeSteps. This is symptomatic
of counting to infinity.
Router 0
d 0 i -1 m 0
d 1 i 2 m 1
d 2 i 1 m 1
d 3 i 2 m 20
d 4 i 2 m 21
d 5 i 2 m 21
d 6 i 2 m 21
d 7 i 2 m 22

The packet was dropped before infinity was finally "reached" at router 0, and across the network, at :99 :
Router 0
d 0 i -1 m 0
d 1 i 2 m 1
d 2 i 1 m 1
d 3 i 2 m 60
d 4 i 2 m 60
d 5 i 2 m 60
d 6 i 2 m 60
d 7 i 2 m 60